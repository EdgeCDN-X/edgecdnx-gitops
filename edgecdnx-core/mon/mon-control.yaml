---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: edgecdnx-monitoring
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
    - clusters:
        selector:
          matchExpressions:
            - key: edgecdnx.com/control
              operator: In
              values:
                - "true"
                - "yes"
  template:
    metadata:
      name: edgecdnx-monitoring
    spec:
      project: default
      sources:
        - chart: "kube-prometheus-stack"
          repoURL: "https://prometheus-community.github.io/helm-charts"
          targetRevision: 79.0.1
          helm:
            releaseName: edgecdnx-monitoring
            valuesObject:
              kubeApiServer:
                enabled: false
              kubeProxy:
                enabled: false
              alertmanager:
                enabled: false
              grafana:
                enabled: false
              prometheus:
                enabled: true
                ingress:
                  enabled: true
                  annotations:
                    cert-manager.io/issuer: mon-tls-issuer
                    cert-manager.io/subject-organizations: "EdgeCDNX"
                    cert-manager.io/subject-countries: "SK"
                    cert-manager.io/usages: "digital signature,key encipherment,server auth,client auth"
                    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
                    nginx.ingress.kubernetes.io/auth-tls-secret: monitoring/edgecdnx-root-ca-monitoring
                    nginx.ingress.kubernetes.io/auth-tls-verify-client: "off"
                    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
                  hosts:
                  - "prometheus.{{ metadata.annotations.basedomain }}"
                  tls:
                  - hosts:
                    - "prometheus.{{ metadata.annotations.basedomain }}"
                    secretName: prometheus-cert-tls
                prometheusSpec:
                  enableRemoteWriteReceiver: true
                  enableFeatures: 
                    - metadata-wal-records
      destination:
        namespace: monitoring
        name: "{{ name }}"
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true # Big CRDs.
      ignoreDifferences: []
